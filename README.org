* Zero to Hero: XSEDE, PSC, and Bridges
  :PROPERTIES:
  :CUSTOM_ID: zero-to-hero-xsede-psc-and-bridges
  :END:
** Account setup
   :PROPERTIES:
   :CUSTOM_ID: account-setup
   :END:
*** Creating account
    :PROPERTIES:
    :CUSTOM_ID: creating-account
    :END:
If you do not already have an XSEDE account, you can create one
[[https://portal.xsede.org/my-xsede?p_p_id=58&p_p_lifecycle=0&p_p_state=maximized&p_p_mode=view&_58_struts_action=%2Flogin%2Fcreate_account][here]].

*** Requesting an allocation
    :PROPERTIES:
    :CUSTOM_ID: requesting-an-allocation
    :END:
TODO

*** Getting added to an allocation
    :PROPERTIES:
    :CUSTOM_ID: getting-added-to-an-allocation
    :END:
To use compute resources, you will need to be added to an XSEDE
allocation. Your PI and/or allocation manager can add you as a user to a
specific project
[[https://portal.xsede.org/group/xup/add-remove-user][here]].

** Running your first job
   :PROPERTIES:
   :CUSTOM_ID: running-your-first-job
   :END:
*** Logging into Bridges2/PSC via =ssh=
    :PROPERTIES:
    :CUSTOM_ID: logging-into-bridges2psc-via-ssh
    :END:
Start by =ssh=ing into the bridges2 server at port 2222:

#+begin_src sh
ssh -p 2222 <username>@bridges2.psc.edu
#+end_src

You will be prompted for your XSEDE credentials. Use your XSEDE User
Portal password.

*/Tip:/* TODO Add tip about .bashrc etc.

*/Warning:/* TODO add warning about randomness when parallelizing

*** Creating a Slurm job script
    :PROPERTIES:
    :CUSTOM_ID: creating-a-slurm-job-script
    :END:
Bridges-2 uses a job-scheduling system called "Slurm", providing a way
for users like ourselves to request specific resources for our compute
jobs and automatically launch jobs once said resources have become
available.

Jobs are submitted using the =sbatch= command along with a *batch
script* which we will create. These batch scripts take the following
general form.

#+begin_src sh
#!/bin/bash

### REQUEST RESOURCES ###
#SBATCH -arg1 argument1
#SBATCH -arg2 argument2 
# .
# .
# .
#SBATCH -arg3 argument3

### LOAD MODULES ###
module load some_module

### RUN SCRIPTS ###
python myscript.py
Rscript myscript.R
#+end_src

*** Parallel computation
    :PROPERTIES:
    :CUSTOM_ID: parallel-computation
    :END:
**** [[file:examples/python/python_parallel/README.md][Python]]
     :PROPERTIES:
     :CUSTOM_ID: python
     :END:
**** [[file:examples/R/R_parallel/README.md][R]]
     :PROPERTIES:
     :CUSTOM_ID: r
     :END:
** Advanced
   :PROPERTIES:
   :CUSTOM_ID: advanced
   :END:
TODO
